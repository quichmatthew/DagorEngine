# https://github.com/jrouwe/JoltPhysics.git
# rev 6535d6ca60a47bed90153730b3fc3a409d48e274
Root    ?= ../../../.. ;
Location = prog/3rdPartyLibs/phys/joltPhysics ;
if $(OS) = NT { Platform ?= win64 ; }

include $(Root)/prog/_jBuild/defaults.jam ;

local supp = win32 win64 winarm64 linux64 xboxOne scarlett android nswitch macosx iOS tvOS ps4 ps5 ;
if ! $(Platform) in $(supp) { Exit Jolt\: Platform\=$(Platform) is not supported, must be one of: $(supp) ; }

TargetType  = lib ;
Target      = 3rdPartyLibs/phys/joltPhysics.lib ;

local _SrcDirs =
  Jolt/AABBTree
  Jolt/Core
  Jolt/Geometry
  Jolt/Math
  Jolt/ObjectStream
  Jolt/Physics
  Jolt/Physics/Body
  Jolt/Physics/Character
  Jolt/Physics/Collision
  Jolt/Physics/Collision/BroadPhase
  Jolt/Physics/Collision/Shape
  Jolt/Physics/Constraints
  Jolt/Physics/Ragdoll
  Jolt/Physics/SoftBody
  Jolt/Physics/Vehicle
  Jolt/Skeleton
  Jolt/TriangleGrouper
  Jolt/TriangleSplitter
;

Sources += Jolt/RegisterTypes.cpp ;

AddIncludes = $(Root)/$(Location) ;
include $(Root)/$(Location)/setup.jam ;

if $(Platform) in win32 win64 winarm64 { CPPopt += -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_SCL_SECURE_NO_WARNINGS ; }
if $(Config) in dev dbg { _SrcDirs += Jolt/Renderer ; }

if $(Platform) = linux64 || $(PlatformSpec) in clang clang64 {
  if $(Platform) in win32 win64 winarm64 xboxOne scarlett {
    CPPopt += -fp:fast /clang:-fno-unsafe-math-optimizations /clang:-mno-fma ;
  } else {
    CPPopt += -ffast-math ;
    if $(Platform) in android { CPPopt += -fno-unsafe-math-optimizations ; }
    else if ! $(Platform) in iOS nswitch { CPPopt += -fno-unsafe-math-optimizations -mno-fma ; }
  }
} else if $(Platform) = win32 { CPPopt += -fp:precise ; }

AutoscanBuildLists $(_SrcDirs) : *.cpp : Sources ;

include $(Root)/prog/_jBuild/build.jam ;

