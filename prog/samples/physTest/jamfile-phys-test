Location = prog/samples/physTest ;

TargetType  = exe ;
Target      = samples/physTest$(PhysEngine) ;

OutDir      = $(Root)/samples/physTest ;
include $(Root)/prog/_jBuild/defaults.jam ;

AddIncludes =
  $(Root)/prog/tools/sharedInclude
  $(Root)/prog/gameLibs/publicInclude
;

Sources =
  physTest.cpp
;

UseProgLibs =
  engine/osApiWrappers
  engine/kernel
  engine/memory
  engine/ioSys
  engine/startup
  engine/baseUtil
  engine/math
  engine/lib3d
  engine/image
  engine/shaders
  engine/guiBase
  engine/workCycle
  engine/scene
  engine/sceneRay
  engine/coreUtil

  engine/phys/physCommon
  engine/perfMon

  gameLibs/heightmap

  samples/commonFramework
;

if $(Headless) = yes {
  UseProgLibs +=
    engine/drv/hid_nulldrv
    engine/drv/drv3d_stub
  ;
}

if $(Platform) in win32 win64 winarm64 {
  UseProgLibs +=
    tools/libTools/shaderResBuilder
    tools/libTools/dagFileRW
    tools/libTools/util
  ;
  if $(Headless) != yes {
    UseProgLibs +=
      engine/drv/hid_mouse
      engine/drv/hid_keyboard
      engine/drv/drv3d_DX11
    ;
  }
} else if $(Platform) in linux64 {
  if $(Headless) != yes {
    UseProgLibs +=
      engine/drv/drv3d_vulkan
      engine/drv/hid_mouse
      engine/drv/hid_keyboard
      engine/osApiWrappers/messageBox
    ;
  } else {
    UseProgLibs += engine/osApiWrappers/messageBox/stub engine/workCycle/stub ;
  }
} else if $(Platform) in macosx {
  Sources += macosx_main.mm ;
  if $(Headless) != yes {
    UseProgLibs +=
      engine/drv/hid_mouse
      engine/drv/hid_keyboard
      engine/osApiWrappers/messageBox
    ;
  }
  BundleName = PhysTest$(PhysEngine) ;
  include $(Root)/prog/samples/macOS-testApp-res/macOS-common.jam ;
}

include $(Root)/prog/3rdPartyLibs/phys/setup-phys.jam ;
