Root    ?= ../../../.. ;
Location = prog/engine/osApiWrappers/messageBox ;
StrictCompile = yes ;

include $(Root)/prog/_jBuild/defaults.jam ;

TargetType  = lib ;
Target      = engine/osApiWrappers/messageBox.lib ;

CPPopt = -D__B_MINICORE -D__B_NO_MEM_BASE_INCLUDE=1 ;

if $(Platform) in win32 win64 winarm64 {
  Sources +=
    messageBox.cpp
  ;
  AddLibs += Comctl32.lib ;
} else if $(Platform) in macosx {
  Sources +=
    macMessageBox.mm
    macOsMessageBox.cpp
  ;
  CPPopt += -Wno-error ;
} else if $(Platform) in linux64 {
  AddLibs += -lX11 ;
  if [ GLOB $(_DEVTOOL) : fltk-1.3.3 ] {
    AddIncludes += $(_DEVTOOL)/fltk-1.3.3 ;
    AddLibs += -lX11 $(_DEVTOOL)/fltk-1.3.3/lib/libfltk-minimal.a ;
  } else {
    AddLibs += -lX11 -lfltk ;
  }
  Sources += linuxMessageBox.cpp ;
} else if $(Platform) in ps4 ps5 {
  Sources += sonyMessageBox.cpp ;
} else if $(Platform) in nswitch {
  Sources += nswitchMessageBox.cpp ;
} else if $(Platform) in xboxOne scarlett {
  Sources += xboxMessageBox.cpp ;
} else if $(Platform) in android {
  Sources += and_MessageBox.cpp ;
} else if $(Platform) in iOS tvOS {
  Sources += iosMessageBox.mm ;
}

AddIncludes += $(Root)/prog/engine/sharedInclude ;

include $(Root)/prog/_jBuild/build.jam ;
